cmake_minimum_required(VERSION 3.1.0 FATAL_ERROR)
PROJECT (SDOMB CXX)

include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
elseif(COMPILER_SUPPORTS_CXX0X)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
else()
        message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
endif()

include_directories ("${PROJECT_SOURCE_DIR}/src")
add_subdirectory (src)
set (EXTRA_LIBS ${EXTRA_LIBS} src)

SET (CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake/;${CMAKE_MODULE_PATH}")
ADD_DEFINITIONS("-DNEW_CIMG")
#FIND_PACKAGE(CImg REQUIRED)
#FIND_PACKAGE(GMP REQUIRED)
#FIND_PACKAGE(PythonLibs REQUIRED)
FIND_PACKAGE(Boost COMPONENTS REQUIRED program_options unit_test_framework)

#INCLUDE_DIRECTORIES("${CIMG_INCLUDE_DIRS}")
#INCLUDE_DIRECTORIES ("${GMP_INCLUDE_DIRS}")
#INCLUDE_DIRECTORIES ("${Boost_INCLUDE_DIRS}")
SET (EXTRA_LIBS ${EXTRA_LIBS} ${GMP_LIBRARIES})
#SET(EXTRA_LIBS ${EXTRA_LIBS} ${CIMG_LIBRARIES})

#FIND_PACKAGE(GDAL REQUIRED)
#include_directories(${GDAL_INCLUDE_DIR})
#message(${GDAL_INCLUDE_DIR})
#message(${GDAL_LIBRARIES})

FIND_PACKAGE(LIBLBFGS REQUIRED)
include_directories(${LIBLBFGS_INCLUDE_DIR})
message(${LIBLBFGS_INCLUDE_DIR})
message(${LIBLBFGS_LIBRARIES})

find_package( OpenCV REQUIRED )

#FIND_PACKAGE(OPENCV REQUIRED)
#include_directories(${OPENCV})
#message(${OPENCV})
#message(${OPENCV})

ADD_EXECUTABLE(reconstruct main.cpp)
target_link_libraries (reconstruct ${LIBLBFGS_LIBRARIES})
TARGET_LINK_LIBRARIES(reconstruct ${EXTRA_LIBS})
target_link_libraries (reconstruct ${GDAL_LIBRARIES})
target_compile_features(reconstruct PRIVATE cxx_range_for)
target_link_libraries(reconstruct ${OpenCV_LIBS} )
